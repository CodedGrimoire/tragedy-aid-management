"use strict";(()=>{var e={};e.id=6238,e.ids=[6238],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},74199:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>b});var r={};t.r(r),t.d(r,{GET:()=>d,PATCH:()=>c,POST:()=>p});var i=t(36126),n=t(69184),a=t(36197),o=t(81602);let u=new(t(53524)).PrismaClient;async function d(e){try{let e=await u.victim.findMany({include:{govtSubsidies:!0}}),s=await u.subsidy.findMany(),t=e.length,r=e.filter(e=>e.govtSubsidies.length>0).length,i=e.map(e=>({birthCertificateNumber:e.birthCertificateNumber,name:e.name,receivedSubsidy:e.govtSubsidies.length>0,subsidyID:e.govtSubsidies.length>0?e.govtSubsidies[0].subsidyID:null}));return o.NextResponse.json({victims:i,subsidyOptions:s,stats:{totalVictims:t,recipientsCount:r,nonRecipientsCount:t-r}},{status:200})}catch(e){return console.error("Error fetching victims:",e),o.NextResponse.json({error:e.message},{status:500})}}async function c(e){try{let{birthCertificateNumber:s,subsidyID:t}=await e.json(),r=await u.victim.findUnique({where:{birthCertificateNumber:s},include:{govtSubsidies:!0}});if(!r)return o.NextResponse.json({error:"Victim not found"},{status:404});if(r.govtSubsidies.length>0)return o.NextResponse.json({error:"Victim already has a subsidy"},{status:400});let i=await u.governmentSubsidy.create({data:{birthCertificateNumber:s,subsidyID:t,dateReceived:new Date}});return o.NextResponse.json({message:"Subsidy assigned successfully",subsidy:i},{status:201})}catch(e){return console.error("Error assigning subsidy:",e),o.NextResponse.json({error:e.message},{status:500})}}async function p(e){try{let{medicalCondition:s,amount:t,eligibility:r}=await e.json();if(!s||!t||!r)return o.NextResponse.json({error:"Missing fields"},{status:400});let i=await u.subsidy.create({data:{medicalCondition:s,amount:t,eligibility:r}});return o.NextResponse.json({message:"Subsidy created",subsidy:i},{status:201})}catch(e){return console.error("Error adding subsidy:",e),o.NextResponse.json({error:e.message},{status:500})}}let l=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/gsubsidy/route",pathname:"/api/gsubsidy",filename:"route",bundlePath:"app/api/gsubsidy/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/gsubsidy/route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:b,serverHooks:y}=l,m="/api/gsubsidy/route";function h(){return(0,a.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:b})}}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[9576,4946],()=>t(74199));module.exports=r})();