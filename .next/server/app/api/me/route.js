"use strict";(()=>{var e={};e.id=9446,e.ids=[9446],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},85356:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>c});var n={};t.r(n),t.d(n,{GET:()=>p});var s=t(36126),o=t(69184),a=t(36197);let i=new(t(53524)).PrismaClient;async function p(e){try{let e=await i.user.findFirst({select:{name:!0,role:!0}});if(!e)return new Response(JSON.stringify({error:"User not found"}),{status:404,headers:{"Content-Type":"application/json"}});return console.log("Fetched User:",e),new Response(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Error fetching user:",e),new Response(JSON.stringify({error:"Internal Server Error"}),{status:500,headers:{"Content-Type":"application/json"}})}}let u=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/me/route",pathname:"/api/me",filename:"route",bundlePath:"app/api/me/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/me/route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:l}=u,m="/api/me/route";function h(){return(0,a.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:c})}},36126:(e,r,t)=>{e.exports=t(30517)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[9576],()=>t(85356));module.exports=n})();