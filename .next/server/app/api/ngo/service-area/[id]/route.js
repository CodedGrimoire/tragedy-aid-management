"use strict";(()=>{var e={};e.id=2964,e.ids=[2964],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},89540:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>N,routeModule:()=>v,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f});var a={};t.r(a),t.d(a,{DELETE:()=>l,GET:()=>c,PUT:()=>p});var s=t(36126),i=t(69184),o=t(36197),n=t(53524),u=t(81602);let d=new n.PrismaClient;async function c(e,{params:r}){try{let e=parseInt(r.id);if(isNaN(e))return u.NextResponse.json({error:"Invalid service area ID"},{status:400});let t=await d.NGO_ServiceArea.findUnique({where:{serviceAreaID:e},include:{ngo:{select:{name:!0,supportType:!0,contact:!0}}}});if(!t)return u.NextResponse.json({error:"Service area not found"},{status:404});return u.NextResponse.json(t)}catch(e){return console.error("Error fetching service area:",e),u.NextResponse.json({error:"Failed to fetch service area"},{status:500})}}async function p(e,{params:r}){try{let t=parseInt(r.id);if(isNaN(t))return u.NextResponse.json({error:"Invalid service area ID"},{status:400});let{locationName:a,latitude:s,longitude:i,radiusKm:o,isActive:n}=await e.json();if(void 0!==s&&isNaN(parseFloat(s))||void 0!==i&&isNaN(parseFloat(i))||void 0!==o&&isNaN(parseFloat(o)))return u.NextResponse.json({error:"Invalid numeric values for coordinates or radius"},{status:400});if(!await d.NGO_ServiceArea.findUnique({where:{serviceAreaID:t}}))return u.NextResponse.json({error:"Service area not found"},{status:404});let c=await d.NGO_ServiceArea.update({where:{serviceAreaID:t},data:{...void 0!==a&&{locationName:a},...void 0!==s&&{latitude:parseFloat(s)},...void 0!==i&&{longitude:parseFloat(i)},...void 0!==o&&{radiusKm:parseFloat(o)},...void 0!==n&&{isActive:!!n}}});return u.NextResponse.json(c)}catch(e){return console.error("Error updating service area:",e),u.NextResponse.json({error:"Failed to update service area"},{status:500})}}async function l(e,{params:r}){try{let e=parseInt(r.id);if(isNaN(e))return u.NextResponse.json({error:"Invalid service area ID"},{status:400});if(!await d.NGO_ServiceArea.findUnique({where:{serviceAreaID:e}}))return u.NextResponse.json({error:"Service area not found"},{status:404});return await d.NGO_ServiceArea.delete({where:{serviceAreaID:e}}),u.NextResponse.json({message:"Service area deleted successfully"})}catch(e){return console.error("Error deleting service area:",e),u.NextResponse.json({error:"Failed to delete service area"},{status:500})}}let v=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/ngo/service-area/[id]/route",pathname:"/api/ngo/service-area/[id]",filename:"route",bundlePath:"app/api/ngo/service-area/[id]/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/ngo/service-area/[id]/route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:N,staticGenerationAsyncStorage:f,serverHooks:x}=v,h="/api/ngo/service-area/[id]/route";function g(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[9576,4946],()=>t(89540));module.exports=a})();