"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/crud/route";
exports.ids = ["app/api/crud/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcrud%2Froute&page=%2Fapi%2Fcrud%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcrud%2Froute.js&appDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcrud%2Froute&page=%2Fapi%2Fcrud%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcrud%2Froute.js&appDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_tazkia_Desktop_Uddhar_app_api_crud_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/crud/route.js */ \"(rsc)/./app/api/crud/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/crud/route\",\n        pathname: \"/api/crud\",\n        filename: \"route\",\n        bundlePath: \"app/api/crud/route\"\n    },\n    resolvedPagePath: \"/Users/tazkia/Desktop/Uddhar/app/api/crud/route.js\",\n    nextConfigOutput,\n    userland: _Users_tazkia_Desktop_Uddhar_app_api_crud_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/crud/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjcnVkJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjcnVkJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY3J1ZCUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnRhemtpYSUyRkRlc2t0b3AlMkZVZGRoYXIlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGdGF6a2lhJTJGRGVza3RvcCUyRlVkZGhhciZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3Nob2hpZC8/N2E1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvdGF6a2lhL0Rlc2t0b3AvVWRkaGFyL2FwcC9hcGkvY3J1ZC9yb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY3J1ZC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NydWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NydWQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvdGF6a2lhL0Rlc2t0b3AvVWRkaGFyL2FwcC9hcGkvY3J1ZC9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY3J1ZC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcrud%2Froute&page=%2Fapi%2Fcrud%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcrud%2Froute.js&appDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/crud/route.js":
/*!*******************************!*\
  !*** ./app/api/crud/route.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n// ✅ GET: Fetch all victims (including related data)\nasync function GET() {\n    try {\n        const victims = await prisma.victim.findMany({\n            include: {\n                medical: true,\n                family: true,\n                event: true,\n                tragedyVictims: {\n                    include: {\n                        tragedy: true\n                    }\n                }\n            }\n        });\n        console.log(\"✅ Victims fetched successfully:\", victims);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(victims);\n    } catch (error) {\n        console.error(\"❌ Database Fetch Error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Failed to fetch victims.\"\n        }, {\n            status: 500\n        });\n    }\n}\n// ✅ PUT: Update victim details (handles existing/new events & tragedies)\nasync function PUT(req) {\n    try {\n        const { birthCertificateNumber, name, status, medicalID, eventID, eventDescription, eventLocation, familyID, familyHead, tragedyID, tragedyName } = await req.json();\n        console.log(\"\\uD83D\\uDD39 Incoming update request:\", {\n            birthCertificateNumber,\n            name,\n            status,\n            medicalID,\n            eventID,\n            eventDescription,\n            eventLocation,\n            familyID,\n            familyHead,\n            tragedyID,\n            tragedyName\n        });\n        // Convert IDs to integers if provided as strings.\n        let updatedEventID = eventID ? parseInt(eventID) : null;\n        let updatedTragedyID = tragedyID ? parseInt(tragedyID) : null;\n        // If no existing event is selected and eventDescription is provided, create a new event.\n        if (!updatedEventID && eventDescription.trim() !== \"\") {\n            console.log(\"\\uD83C\\uDD95 Creating new event...\");\n            const newEvent = await prisma.event.create({\n                data: {\n                    description: eventDescription,\n                    location: eventLocation,\n                    date: new Date()\n                }\n            });\n            updatedEventID = newEvent.eventID;\n            console.log(\"✅ New event created:\", newEvent);\n        }\n        // If no existing tragedy is selected and tragedyName is provided, create a new tragedy.\n        if (!updatedTragedyID && tragedyName.trim() !== \"\") {\n            console.log(\"\\uD83C\\uDD95 Creating new tragedy...\");\n            const newTragedy = await prisma.tragedy.create({\n                data: {\n                    tragedyName\n                }\n            });\n            updatedTragedyID = newTragedy.tragedyID;\n            console.log(\"✅ New tragedy created:\", newTragedy);\n        }\n        // Update family head if changed\n        if (familyHead && familyID) {\n            console.log(\"\\uD83D\\uDEE0 Updating family head...\");\n            await prisma.familyInfo.update({\n                where: {\n                    familyID: parseInt(familyID)\n                },\n                data: {\n                    headName: familyHead\n                }\n            });\n            console.log(\"✅ Family head updated:\", familyHead);\n        }\n        // Ensure the victim exists\n        const victimExists = await prisma.victim.findUnique({\n            where: {\n                birthCertificateNumber: parseInt(birthCertificateNumber)\n            }\n        });\n        if (!victimExists) {\n            console.error(`❌ Victim with ID ${birthCertificateNumber} not found!`);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Victim not found.\"\n            }, {\n                status: 404\n            });\n        }\n        // Update victim details\n        console.log(\"\\uD83D\\uDEE0 Updating victim...\");\n        const updatedVictim = await prisma.victim.update({\n            where: {\n                birthCertificateNumber: parseInt(birthCertificateNumber)\n            },\n            data: {\n                name,\n                status,\n                medicalID,\n                eventID: updatedEventID || null,\n                familyID: parseInt(familyID)\n            }\n        });\n        console.log(\"✅ Victim updated successfully:\", updatedVictim);\n        // Link victim to tragedy if updated\n        if (updatedTragedyID) {\n            const existingTragedyVictim = await prisma.tragedyVictim.findFirst({\n                where: {\n                    birthCertificateNumber: parseInt(birthCertificateNumber),\n                    tragedyID: updatedTragedyID\n                }\n            });\n            if (!existingTragedyVictim) {\n                console.log(\"\\uD83C\\uDD95 Linking victim to tragedy...\");\n                await prisma.tragedyVictim.create({\n                    data: {\n                        tragedyID: updatedTragedyID,\n                        birthCertificateNumber: parseInt(birthCertificateNumber)\n                    }\n                });\n                console.log(`✅ Victim ${birthCertificateNumber} linked to tragedy ${updatedTragedyID}`);\n            } else {\n                console.log(`⚠️ Victim ${birthCertificateNumber} is already linked to tragedy ${updatedTragedyID}`);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(updatedVictim);\n    } catch (error) {\n        console.error(\"❌ Error updating victim:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Error updating victim.\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n// ✅ DELETE: Remove victim and clean up related records\nasync function DELETE(req) {\n    try {\n        const { birthCertificateNumber } = await req.json();\n        console.log(`🗑 Attempting to delete victim with ID: ${birthCertificateNumber}`);\n        if (!birthCertificateNumber) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Birth Certificate Number is required.\"\n            }, {\n                status: 400\n            });\n        }\n        const victimID = parseInt(birthCertificateNumber);\n        // ❌ Check if victim exists before deleting\n        const victim = await prisma.victim.findUnique({\n            where: {\n                birthCertificateNumber: victimID\n            },\n            include: {\n                tragedyVictims: true,\n                govtSubsidies: true,\n                ngoServices: {\n                    include: {\n                        deliveryLogs: true\n                    }\n                },\n                serviceRequests: {\n                    include: {\n                        serviceItems: true\n                    }\n                },\n                needs: true\n            }\n        });\n        if (!victim) {\n            console.log(`❌ Victim with ID ${victimID} not found.`);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Victim not found.\"\n            }, {\n                status: 404\n            });\n        }\n        console.log(\"\\uD83D\\uDD04 Removing related records...\");\n        // ✅ Remove service items first before deleting service requests\n        await prisma.serviceItem.deleteMany({\n            where: {\n                requestID: {\n                    in: victim.serviceRequests.map((request)=>request.requestID)\n                }\n            }\n        });\n        // ✅ Remove service delivery logs first before deleting NGO services\n        await prisma.serviceDeliveryLog.deleteMany({\n            where: {\n                serviceID: {\n                    in: victim.ngoServices.map((service)=>service.serviceID)\n                }\n            }\n        });\n        // ✅ Remove dependent records to satisfy foreign key constraints\n        await prisma.tragedyVictim.deleteMany({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        await prisma.governmentSubsidy.deleteMany({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        await prisma.nGO_Service_Provided.deleteMany({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        await prisma.serviceRequest.deleteMany({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        await prisma.victimNeed.deleteMany({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        console.log(\"✅ All related records deleted successfully.\");\n        // ✅ Now, delete the victim record\n        await prisma.victim.delete({\n            where: {\n                birthCertificateNumber: victimID\n            }\n        });\n        console.log(`✅ Victim with ID ${victimID} deleted successfully.`);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            message: \"Victim deleted successfully.\"\n        });\n    } catch (error) {\n        console.error(\"❌ Error deleting victim:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Error deleting victim.\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/crud/route.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcrud%2Froute&page=%2Fapi%2Fcrud%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcrud%2Froute.js&appDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftazkia%2FDesktop%2FUddhar&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();