"use strict";(()=>{var e={};e.id=5573,e.ids=[5573],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},49068:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>u});var r={};a.r(r),a.d(r,{GET:()=>d,POST:()=>p});var i=a(36126),n=a(69184),s=a(36197),o=a(30482);async function d(){try{let e=await o.Z.medical.findMany();return new Response(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("GET /api/medical error:",e),new Response(JSON.stringify({error:"Failed to fetch medical records."}),{status:500,headers:{"Content-Type":"application/json"}})}}async function p(e){try{let{medicalID:t,dateOfBirth:a,dateOfDeath:r,bloodGroup:i,medicalCondition:n,operation:s}=await e.json();if(!t)return new Response(JSON.stringify({error:"Medical ID is required."}),{status:400,headers:{"Content-Type":"application/json"}});let d=await o.Z.medical.findUnique({where:{medicalID:t}});if("upsert"===s&&d){let e=await o.Z.medical.update({where:{medicalID:t},data:{dateOfBirth:a?new Date(a):d.dateOfBirth,dateOfDeath:r?new Date(r):d.dateOfDeath,bloodGroup:i||d.bloodGroup,medicalCondition:n||d.medicalCondition}});return new Response(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}let p=await o.Z.medical.create({data:{medicalID:t,dateOfBirth:a?new Date(a):null,dateOfDeath:r?new Date(r):null,bloodGroup:i,medicalCondition:n}});return new Response(JSON.stringify(p),{status:201,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("POST /api/medical error:",e),new Response(JSON.stringify({error:"Failed to create medical record.",details:e.message}),{status:500,headers:{"Content-Type":"application/json"}})}}let l=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/medicals/route",pathname:"/api/medicals",filename:"route",bundlePath:"app/api/medicals/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/medicals/route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:u,serverHooks:m}=l,h="/api/medicals/route";function f(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:u})}},30482:(e,t,a)=>{a.d(t,{Z:()=>r});let r=new(a(53524)).PrismaClient},36126:(e,t,a)=>{e.exports=a(30517)}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[9576],()=>a(49068));module.exports=r})();