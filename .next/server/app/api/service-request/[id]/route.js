"use strict";(()=>{var e={};e.id=4540,e.ids=[4540],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32469:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>q,patchFetch:()=>D,requestAsyncStorage:()=>m,routeModule:()=>v,serverHooks:()=>I,staticGenerationAsyncStorage:()=>f});var s={};r.r(s),r.d(s,{DELETE:()=>l,GET:()=>d,PUT:()=>p});var n=r(36126),i=r(69184),a=r(36197),o=r(53524),u=r(81602);let c=new o.PrismaClient;async function d(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return u.NextResponse.json({error:"Invalid request ID"},{status:400});let r=await c.serviceRequest.findUnique({where:{requestID:e},include:{victim:{select:{birthCertificateNumber:!0,name:!0,status:!0,gender:!0,medical:{select:{bloodGroup:!0,medicalCondition:!0}},family:{select:{headName:!0,contact:!0}}}},ngo:{select:{ngoID:!0,name:!0,contact:!0,supportType:!0}},ngoStaff:{select:{staffID:!0,name:!0,role:!0,contact:!0}},serviceItems:{include:{inventory:!0}}}});if(!r)return u.NextResponse.json({error:"Service request not found"},{status:404});return u.NextResponse.json(r)}catch(e){return console.error("Error fetching service request:",e),u.NextResponse.json({error:"Failed to fetch service request"},{status:500})}}async function p(e,{params:t}){try{let r=parseInt(t.id);if(isNaN(r))return u.NextResponse.json({error:"Invalid request ID"},{status:400});let{status:s,urgencyLevel:n,notes:i,respondedBy:a,responseDate:o,completionDate:d,serviceItems:p}=await e.json(),l=await c.serviceRequest.findUnique({where:{requestID:r},include:{serviceItems:!0}});if(!l)return u.NextResponse.json({error:"Service request not found"},{status:404});if(a&&isNaN(parseInt(a)))return u.NextResponse.json({error:"Invalid staff ID"},{status:400});if(s&&!["pending","approved","in_progress","completed","denied"].includes(s))return u.NextResponse.json({error:"Invalid status value"},{status:400});if(a){let e=await c.nGO_Staff.findUnique({where:{staffID:parseInt(a)}});if(!e)return u.NextResponse.json({error:"Staff member not found"},{status:404});if(e.ngoID!==l.ngoID)return u.NextResponse.json({error:"Staff member must belong to the same NGO as the service request"},{status:400})}let v={...s&&{status:s},...n&&{urgencyLevel:n},...void 0!==i&&{notes:i},...a&&{respondedBy:parseInt(a)},...o&&{responseDate:new Date(o)},...d&&{completionDate:new Date(d)}};"completed"!==s||d||(v.completionDate=new Date),"approved"!==s&&"in_progress"!==s||l.responseDate||(v.responseDate=new Date);let m=[];if(p&&Array.isArray(p))for(let e of p)if(e.serviceItemID){if(!l.serviceItems.find(t=>t.serviceItemID===e.serviceItemID))return u.NextResponse.json({error:`Service item with ID ${e.serviceItemID} not found`},{status:404});m.push(c.serviceItem.update({where:{serviceItemID:e.serviceItemID},data:{...e.serviceType&&{serviceType:e.serviceType},...e.quantity&&{quantity:parseInt(e.quantity)},...e.status&&{status:e.status},...e.deliveryDate&&{deliveryDate:new Date(e.deliveryDate)},...void 0!==e.notes&&{notes:e.notes}}}))}else m.push(c.serviceItem.create({data:{requestID:r,serviceType:e.serviceType,quantity:e.quantity||1,status:e.status||"pending",...e.inventoryID&&{inventoryID:parseInt(e.inventoryID)},...e.deliveryDate&&{deliveryDate:new Date(e.deliveryDate)},...e.notes&&{notes:e.notes}}}));let[f,...I]=await c.$transaction([c.serviceRequest.update({where:{requestID:r},data:v,include:{serviceItems:!0,victim:{select:{name:!0}},ngo:{select:{name:!0}}}}),...m]);return"completed"===s&&await c.victimNeed.updateMany({where:{birthCertificateNumber:l.birthCertificateNumber,needType:l.requestType,status:{not:"addressed"}},data:{status:"addressed",dateAddressed:new Date}}).catch(e=>{console.error("Non-fatal error updating victim need status:",e)}),u.NextResponse.json({...f,updatedItems:m.length>0?I:void 0})}catch(e){return console.error("Error updating service request:",e),u.NextResponse.json({error:"Failed to update service request"},{status:500})}}async function l(e,{params:t}){try{let e=parseInt(t.id);if(isNaN(e))return u.NextResponse.json({error:"Invalid request ID"},{status:400});let r=await c.serviceRequest.findUnique({where:{requestID:e},include:{serviceItems:!0}});if(!r)return u.NextResponse.json({error:"Service request not found"},{status:404});if("completed"===r.status)return u.NextResponse.json({error:"Cannot delete a completed service request"},{status:400});return r.serviceItems.length>0&&await c.serviceItem.deleteMany({where:{requestID:e}}),await c.serviceRequest.delete({where:{requestID:e}}),u.NextResponse.json({message:"Service request deleted successfully"})}catch(e){return console.error("Error deleting service request:",e),u.NextResponse.json({error:"Failed to delete service request"},{status:500})}}let v=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/service-request/[id]/route",pathname:"/api/service-request/[id]",filename:"route",bundlePath:"app/api/service-request/[id]/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/service-request/[id]/route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:I}=v,q="/api/service-request/[id]/route";function D(){return(0,a.patchFetch)({serverHooks:I,staticGenerationAsyncStorage:f})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9576,4946],()=>r(32469));module.exports=s})();