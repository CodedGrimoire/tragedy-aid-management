"use strict";(()=>{var e={};e.id=5272,e.ids=[5272],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},52715:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>g,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>c,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{default:()=>n});var s=r(36126),i=r(69184),o=r(36197);let u=new(r(53524)).PrismaClient;async function n(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method Not Allowed"});try{let{birthCertificateNumber:r,name:a,gender:s,status:i,medicalID:o,eventID:n,familyID:d}=e.body;if(!r||!a||!o||!n||!d)return t.status(400).json({message:"Missing required fields!"});let p=await u.victim.create({data:{birthCertificateNumber:r,name:a,gender:s,status:i,medicalID:o,eventID:n,familyID:d}});t.status(201).json({message:"Victim added successfully",victim:p})}catch(e){console.error("Error adding victim:",e),t.status(500).json({error:"Internal Server Error"})}}let d=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/submitdata/route",pathname:"/api/submitdata",filename:"route",bundlePath:"app/api/submitdata/route"},resolvedPagePath:"/Users/tazkia/Desktop/Uddhar/app/api/submitdata/route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:c}=d,m="/api/submitdata/route";function g(){return(0,o.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:l})}},36126:(e,t,r)=>{e.exports=r(30517)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9576],()=>r(52715));module.exports=a})();